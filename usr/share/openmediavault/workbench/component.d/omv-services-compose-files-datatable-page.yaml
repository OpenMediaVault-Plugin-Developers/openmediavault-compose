version: "1.0"
type: component
data:
  name: omv-services-compose-files-datatable-page
  type: datatablePage
  config:
    autoReload: false
    hasSearchField: true
    stateId: 2342fc64-d6d3-11ec-aa87-3bd4b4655482
    sorters:
      - dir: asc
        prop: name
    store:
      proxy:
        service: Compose
        get:
          method: getFileList
    columns:
      - name: _("Name")
        prop: name
        flexGrow: 1
        sortable: true
      - name: _("Description")
        prop: description
        flexGrow: 1
        sortable: true
      - name: _("Status")
        prop: status
        flexGrow: 1
        sortable: true
        cellTemplateName: chip
        cellTemplateConfig:
          map:
            UP:
              value: _("Up")
              class: omv-background-color-pair-green
            STOPPED:
              value: _("Stopped")
              class: omv-background-color-pair-yellow
            DOWN:
              value: _("Down")
              class: omv-background-color-pair-red
            MIXED:
              value: _("Mixed")
              class: omv-background-color-pair-blue
    actions:
      - template: create
        execute:
          type: url
          url: "/services/compose/files/create"
      - type: iconButton
        icon: mdi:plus-outline
        tooltip: _("Add from Example")
        execute:
          type: url
          url: "/services/compose/files/example"
      - type: iconButton
        icon: mdi:file-document-plus-outline
        tooltip: _("Autocompose")
        execute:
          type: formDialog
          formDialog:
            title: _('Create new compose file from running container ...')
            fields:
              - type: select
                name: container
                label: _('Container')
                textField: desc
                valueField: name
                value: 'Create new disk'
                store:
                  proxy:
                    service: Compose
                    get:
                      method: enumerateContainers
                validators:
                  required: true
              - type: textInput
                name: name
                label: _("Name")
                validators:
                  required: true
              - type: textInput
                name: description
                label: _("Description")
              - type: select
                name: version
                label: _("Version")
                value: "3"
                store:
                  data:
                    - ["1", "1"]
                    - ["2", "2"]
                    - ["3", "3"]
                hint: _("docker-compose file version")
            buttons:
              submit:
                text: _('Create')
                execute:
                  type: request
                  request:
                    service: Compose
                    method: doAutocompose
      - type: iconButton
        icon: mdi:file-import-outline
        tooltip: _("Import")
        execute:
          type: formDialog
          formDialog:
            title: _('Import existing compose folders ...')
            fields:
              - type: hidden
                name: rootfsref
                value: "79684322-3eac-11ea-a974-63a080abab18"
                submitValue: false
              - type: folderBrowser
                name: path
                label: _("Path")
                value: ''
                dirType: mntent
                dirRefIdField: rootfsref
            buttons:
              submit:
                text: _('Create')
                execute:
                  type: request
                  request:
                    service: Compose
                    method: importExistingFolder
      - template: edit
        execute:
          type: url
          url: "/services/compose/files/edit/{{ _selected[0].uuid }}"
      - template: delete
        execute:
          type: request
          request:
            service: Compose
            method: deleteFile
            params:
              uuid: "{{ _selected[0].uuid }}"
      - type: iconButton
        icon: mdi:check-network-outline
        tooltip: _("check")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("Check compose file for errors ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "config"
      - type: iconButton
        icon: mdi:arrow-up-circle-outline
        tooltip: _("up")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose up -d ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "up -d"
      - type: iconButton
        icon: mdi:stop
        tooltip: _("stop")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose stop ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "stop"
      - type: iconButton
        icon: mdi:arrow-down-circle-outline
        tooltip: _("down")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose down ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "down"
      - type: iconButton
        icon: mdi:download-network-outline
        tooltip: _("pull")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose pull ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "pull"
      - type: iconButton
        icon: mdi:list-status
        tooltip: _("ps")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose ps ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "ps"
      - type: menu
        icon: mdi:content-cut
        tooltip: _("Prune")
        actions:
          - text: _("System")
            icon: mdi:scissors-cutting
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker system prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "system prune"
          - text: _("Image")
            icon: mdi:image-minus-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker image prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "image prune"
          - text: _("Container")
            icon: mdi:card-minus-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker container prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "container prune"
          - text: _("Volume")
            icon: mdi:database-minus-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker volume prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "volume prune"
          - text: _("Network")
            icon: mdi:minus-network-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker network prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "network prune"
      - type: menu
        icon: mdi:link
        tooltip: _("Docs")
        actions:
          - text: _("omv-extras wiki")
            icon: mdi:link-box
            execute:
              type: url
              url: '/externalRedirect/https%3A%2F%2Fwiki.omv-extras.org%2Fdoku.php%3Fid%3Domv6%3Aomv6_plugins%3Adocker_compose'
