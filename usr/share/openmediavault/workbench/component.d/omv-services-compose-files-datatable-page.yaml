version: "1.0"
type: component
data:
  name: omv-services-compose-files-datatable-page
  type: datatablePage
  config:
    autoReload: false
    hasSearchField: true
    rowId: name
    stateId: 2342fc64-d6d3-11ec-aa87-3bd4b4655482
    sorters:
      - dir: asc
        prop: name
    sortType: multi
    store:
      proxy:
        service: Compose
        get:
          method: getFileListBg
          task: true
    columns:
      - name: "uuid"
        prop: uuid
        flexGrow: 1
        sortable: true
        hidden: true
      - name: _("Name")
        prop: name
        flexGrow: 1
        sortable: true
      - name: _("Description")
        prop: description
        flexGrow: 1
        sortable: true
      - name: _("Tags")
        prop: description
        flexGrow: 1
        sortable: true
        cellTemplateName: chip
        cellTemplateConfig:
          separator: ","
        hidden: true
      - name: _("Service Name")
        prop: svcname
        flexGrow: 1
        sortable: true
        hidden: true
      - name: _("Image")
        prop: image
        flexGrow: 1
        sortable: true
        hidden: true
      - name: _("Status")
        prop: status
        flexGrow: 1
        sortable: true
        cellTemplateName: chip
        cellTemplateConfig:
          separator: ","
          map:
            UP:
              value: _("Up")
              class: omv-background-color-pair-green
            STOPPED:
              value: _("Stopped")
              class: omv-background-color-pair-yellow
            DOWN:
              value: _("Down")
              class: omv-background-color-pair-red
            MIXED:
              value: _("Mixed")
              class: omv-background-color-pair-blue
      - name: _("Uptime")
        prop: uptime
        flexGrow: 1
        sortable: true
        hidden: true
      - name: _("File date")
        prop: filedate
        flexGrow: 1
        sortable: true
        hidden: true
        cellTemplateName: localeDateTime
      - name: _('Build')
        prop: build
        flexGrow: 1
        sortable: true
        hidden: true
        cellTemplateName: checkIcon
      - name: _("Ports")
        prop: ports
        flexGrow: 1
        sortable: true
    actions:
      - type: menu
        icon: add
        tooltip: _("Add")
        actions:
          - text: _("Add")
            icon: add
            execute:
              type: url
              url: "/services/compose/files/create"
          - text: _("Add from Example")
            icon: mdi:plus-outline
            execute:
              type: url
              url: "/services/compose/files/example"
          - text: _("Add from URL")
            icon: mdi:download-box-outline
            execute:
              type: url
              url: "/services/compose/files/url"
          - text: _("Autocompose")
            icon: mdi:file-document-plus-outline
            execute:
              type: formDialog
              formDialog:
                title: _("Create new compose file from running container ...")
                fields:
                  - type: select
                    name: container
                    label: _("Container")
                    textField: desc
                    valueField: name
                    value: "Create new disk"
                    store:
                      proxy:
                        service: Compose
                        get:
                          method: enumerateContainers
                    validators:
                      required: true
                  - type: textInput
                    name: name
                    label: _("Name")
                    validators:
                      required: true
                  - type: textInput
                    name: description
                    label: _("Description")
                    value: ""
                  - type: select
                    name: version
                    label: _("Version")
                    value: "3"
                    store:
                      data:
                        - ["1", "1"]
                        - ["2", "2"]
                        - ["3", "3"]
                    hint: _("docker-compose file version")
                buttons:
                  submit:
                    text: _("Create")
                    execute:
                      type: request
                      request:
                        service: Compose
                        method: doAutocompose
          - text: _("Import")
            icon: mdi:file-import-outline
            execute:
              type: formDialog
              formDialog:
                title: _("Import existing compose folders ...")
                fields:
                  - type: hint
                    hintType: info
                    text: _("This will import one or more compose files in subfolders.<br/>It will not import any compose files that already exist in the plugin.")
                  - type: hidden
                    name: rootfsref
                    value: "79684322-3eac-11ea-a974-63a080abab18"
                    submitValue: false
                  - type: folderBrowser
                    name: path
                    label: _("Path")
                    value: ""
                    dirType: mntent
                    dirRefIdField: rootfsref
                buttons:
                  submit:
                    text: _("Import")
                    execute:
                      type: request
                      request:
                        service: Compose
                        method: importExistingFolder
          - text: _("Import one")
            icon: mdi:file-import
            execute:
              type: formDialog
              formDialog:
                title: _("Import existing compose file ...")
                fields:
                  - type: hint
                    hintType: info
                    text: _("This will import one compose file in the selected folder.<br/>It will not import a compose file that already exist in the plugin.")
                  - type: hidden
                    name: rootfsref
                    value: "79684322-3eac-11ea-a974-63a080abab18"
                    submitValue: false
                  - type: folderBrowser
                    name: path
                    label: _("Path")
                    value: ""
                    dirType: mntent
                    dirRefIdField: rootfsref
                buttons:
                  submit:
                    text: _("Import")
                    execute:
                      type: request
                      request:
                        service: Compose
                        method: importExistingOne
          - text: _("Sync changes from file")
            icon: mdi:file-sync-outline
            confirmationDialogConfig:
              template: confirmation-danger
              message: _("Are you sure you want to sync changes from the files?")
            execute:
              type: request
              request:
                service: Compose
                method: importChanges
                params:
                  uuid: "{{ _selected[0].uuid }}"
                progressMessage: _("Syncing changes from file ...")
                successNotification: _("Changes have been synced from file.")
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
      - template: edit
        execute:
          type: url
          url: "/services/compose/files/edit/{{ _selected[0].uuid }}"
      - template: delete
        execute:
          type: request
          request:
            service: Compose
            method: deleteFile
            params:
              uuid: "{{ _selected[0].uuid }}"
      - type: iconButton
        icon: mdi:check-network-outline
        tooltip: _("check")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("Check compose file for errors ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "config"
      - type: iconButton
        icon: mdi:arrow-up-circle-outline
        tooltip: _("up")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose up -d ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "up -d"
      - type: iconButton
        icon: mdi:stop
        tooltip: _("stop")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose stop ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "stop"
      - type: iconButton
        icon: mdi:arrow-down-circle-outline
        tooltip: _("down")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose down ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "down"
      - type: iconButton
        icon: mdi:download-network-outline
        tooltip: _("pull")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose pull ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "pull"
      - type: iconButton
        icon: mdi:list-status
        tooltip: _("ps")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("docker-compose ps ...")
              startOnInit: true
              request:
                service: Compose
                method: doCommand
                params:
                  uuid: "{{ _selected[0].uuid }}"
                  command: "ps"
      - type: iconButton
        icon: mdi:file-star-outline
        tooltip: _("Edit global environment file")
        execute:
          type: url
          url: "/services/compose/files/global"
      - type: menu
        icon: mdi:content-cut
        tooltip: _("Prune")
        actions:
          - text: _("System")
            icon: mdi:scissors-cutting
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker system prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "system prune"
          - text: _("Container")
            icon: mdi:card-minus-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker container prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "container prune"
          - text: _("Image")
            icon: mdi:image-minus-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker image prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "image prune"
          - text: _("Network")
            icon: mdi:minus-network-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker network prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "network prune"
          - text: _("Volume")
            icon: mdi:database-minus-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker volume prune ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doPrune
                    params:
                      command: "volume prune"
      - type: menu
        icon: mdi:cog-outline
        tooltip: _("Tools")
        actions:
          - text: _("logs")
            icon: mdi:file-document-outline
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker-compose logs ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doCommand
                    params:
                      uuid: "{{ _selected[0].uuid }}"
                      command: "logs"
                      command2: ""
          - text: _("follow logs")
            icon: mdi:file-document-refresh-outline
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker-compose logs --follow ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doCommand
                    params:
                      uuid: "{{ _selected[0].uuid }}"
                      command: "logs"
                      command2: "--follow"
          - text: _("Download logs")
            icon: mdi:download
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
            execute:
              type: url
              url: '/download?service=Compose&method=getLog&params={"name":"{{ _selected[0].name }}"}'
          - text: _("Build")
            icon: mdi:wrench-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("Build ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doCommand
                    params:
                      uuid: "{{ _selected[0].uuid }}"
                      command: "build"
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: truthy
                  arg0:
                    prop: build
          - text: _("Pull and Build")
            icon: mdi:wrench-cog-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("Pull and Build ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doCommand
                    params:
                      uuid: "{{ _selected[0].uuid }}"
                      command: "build --pull"
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: truthy
                  arg0:
                    prop: build
          - text: _("up and remove orphans")
            icon: mdi:arrow-up-circle-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker-compose up -d --remove-orphans ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doCommand
                    params:
                      uuid: "{{ _selected[0].uuid }}"
                      command: "up -d --remove-orphans"
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
          - text: _("down and remove orphans")
            icon: mdi:arrow-down-circle-outline
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("docker-compose down --remove-orphans ...")
                  startOnInit: true
                  request:
                    service: Compose
                    method: doCommand
                    params:
                      uuid: "{{ _selected[0].uuid }}"
                      command: "down --remove-orphans"
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
      - type: menu
        icon: mdi:link
        tooltip: _("Docs")
        actions:
          - text: _("omv-extras wiki")
            icon: mdi:link-box
            execute:
              type: url
              url: "/externalRedirect/https%3A%2F%2Fwiki.omv-extras.org%2Fdoku.php%3Fid%3Domv7%3Aomv7_plugins%3Adocker_compose"
          - text: _("Docker on OMV")
            icon: mdi:docker
            execute:
              type: url
              url: "/externalRedirect/https%3A%2F%2Fwiki.omv-extras.org%2Fdoku.php%3Fid%3Domv7%3Adocker_in_omv"
